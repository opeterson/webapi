/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "org.openapi.generator" version "5.3.0"
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

openApiValidate {
	    inputSpec = rootDir.toString() + '/web-api-client/src/main/resources/web-api.yml'.toString()
	    recommend = true
	}
	
openApiGenerate {
    generatorName = 'spring'
    library = 'spring-mvc'
    inputSpec = rootDir.toString() + '/web-api-client/src/main/resources/web-api.yml'.toString()
    outputDir = projectDir.toString() + '/build/generated/web-api-server'.toString()
    apiPackage = 'ca.owenpeterson.web.api'
    invokerPackage = 'ca.owenpeterson.web.api.invoker'
    modelPackage = 'ca.owenpeterson.web.api.model'
    configOptions = [
        dateLibrary: 'java8',
        serializationLibrary: 'jackson',
        generateModelTests: 'false',
        generateApiTests: 'false'
    ]
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
    
    // Dependency for web-api-client, which contains the model classes needed for the API. 
    implementation project(':web-api-client')        
}
